C <- C["2012"]
GSPC <- GSPC["2012"]
n <- 185
C.C <- as.vector(C[1:n, 4])
C.GSPC <- as.vector(GSPC[1:n, 4])
R.C <- log(C.C[-1] / C.C[-n])
R.SP500 <- log(C.GSPC[-1] / C.GSPC[-n])
par(mar = c(4, 4, 0.5, 0.5))
plot(R.SP500, R.C, pch = 16, xlab = "S&P 500 Daily Returns", ylab = "Citigroup Daily Returns",
col = "blue")
dev.off()
#####################################################################################################
if(file.exists("Images/stdres.pdf"))
unlink("Images/stdres.pdf")
pdf("Images/stdres.pdf", height = 2.5, width = 4)
m.citi <- lm(R.C ~ R.SP500)
par(mar = c(4, 4, 0.5, 0.5))
plot(R.SP500, rstandard(m.citi), pch = 16, col = "blue", xlab = "S&P 500 Daily Returns",
ylab = "Standardized Residuals")
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/notlinear.pdf"))
unlink("Images/notlinear.pdf")
pdf("Images/notlinear.pdf", height = 2.5, width = 4)
x <- sort(runif(100, -4, 4))
y <- 0.5*x + 2*sin(x) + rnorm(100)
par(mar = c(4, 4, 0.5, 0.5))
plot(x, y, pch = 16, col = "blue", xlab = expression(x),
ylab = "Y", )
dev.off()
#####################################################################################################
if(file.exists("Images/notlinearres.pdf"))
unlink("Images/notlinearres.pdf")
pdf("Images/notlinearres.pdf", height = 2.5, width = 4)
m7 <- lm(y ~ x)
par(mar = c(4, 4, 0.5, 0.5))
plot(x, rstandard(m7), pch = 16, col = "blue", xlab = expression(x),
ylab = "Standardized Residuals", )
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/notlinearres2.pdf"))
unlink("Images/notlinearres2.pdf")
pdf("Images/notlinearres2.pdf", height = 2.5, width = 4)
m3 <- lm(y ~ x + sin(x))
par(mar = c(4, 4, 0.5, 0.5))
plot(x, rstandard(m3), pch = 16, col = "blue", xlab = expression(x),
ylab = "Standardized Residuals", )
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/leftout.pdf"))
unlink("Images/leftout.pdf")
pdf("Images/leftout.pdf", height = 2.5, width = 4)
x1 <- runif(200, -4, 4)
x2 <- runif(200, -4, 4)
y <- x1 + x2 + 3*rnorm(200)
m1 <- lm(y ~ x1)
par(mar = c(4, 4, 0.5, 0.5))
plot(x2, rstandard(m1), pch = 16, col = "blue", xlab = expression(x[2]),
ylab = "Standardized Residuals")
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/homoOK.pdf"))
unlink("Images/homoOK.pdf")
pdf("Images/homoOK.pdf", height = 2.5, width = 4)
par(mar = c(4, 4, 0.5, 0.5))
plot(fitted(m.citi), rstandard(m.citi), pch = 16, col = "blue", xlab = "Fitted Values",
ylab = "Standardized Residuals")
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/homoNotOK.pdf"))
unlink("Images/homoNotOK.pdf")
pdf("Images/homoNotOK.pdf", height = 2.5, width = 4)
x <- runif(100, 0, 4)
y <- 1 + 2*x + rnorm(100, sd = x)
par(mar = c(4, 4, 0.5, 0.5))
plot(x, y, pch = 16, col = "blue", xlab = expression(x), ylab = "Response")
dev.off()
#####################################################################################################
if(file.exists("Images/homoNotOKres.pdf"))
unlink("Images/homoNotOKres.pdf")
pdf("Images/homoNotOKres.pdf", height = 2.5, width = 4)
x <- runif(100, 0, 4)
y <- 1 + 2*x + rnorm(100, sd = x)
m2 <- lm(y ~ x)
par(mar = c(4, 4, 0.5, 0.5))
plot(fitted(m2), rstandard(m2), pch = 16, col = "blue", xlab ="Fitted Values", ylab = "Standardized Residuals")
dev.off()
#####################################################################################################
if(file.exists("Images/lnorm.pdf"))
unlink("Images/lnorm.pdf")
pdf("Images/lnorm.pdf", height = 2.5, width = 4)
x <- runif(100, 0, 2)
y <- exp(x + rnorm(100, sd = 0.25))
par(mar = c(4, 4, 0.5, 0.5))
plot(x, y, pch = 16, col = "blue", xlab ="x", ylab = "Y")
dev.off()
#####################################################################################################
if(file.exists("Images/lnormres.pdf"))
unlink("Images/lnormres.pdf")
pdf("Images/lnormres.pdf", height = 2.5, width = 4)
m4 <- lm(y ~ x)
par(mar = c(4, 4, 0.5, 0.5))
plot(fitted(m4), rstandard(m4), pch = 16, col = "blue", xlab ="Fitted Values", ylab = "Standardized Residuals")
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/tlnormres.pdf"))
unlink("Images/tlnormres.pdf")
pdf("Images/tlnormres.pdf", height = 2.5, width = 4)
m5 <- lm(log(y) ~ x)
par(mar = c(4, 4, 0.5, 0.5))
plot(fitted(m5), rstandard(m5), pch = 16, col = "blue", xlab ="Fitted Values",
ylab = "Standardized Residuals")
abline(h = 0, col = "gray")
dev.off()
#####################################################################################################
if(file.exists("Images/citiqq.pdf"))
unlink("Images/citiqq.pdf")
pdf("Images/citiqq.pdf", height = 4, width = 4)
par(mar = c(4, 4, 0.5, 0.5))
qqnorm(rstandard(m.citi), main = "", pch = 16, col = "blue")
qqline(rstandard(m.citi))
dev.off()
#####################################################################################################
if(file.exists("Images/lognormqq.pdf"))
unlink("Images/lognormqq.pdf")
pdf("Images/lognormqq.pdf", height = 4, width = 4)
lnsamp <- rlnorm(250, sdlog = 0.5)
par(mar = c(4, 4, 0.5, 0.5))
qqnorm(lnsamp, main = "", pch = 16, col = "blue")
qqline(lnsamp)
dev.off()
#####################################################################################################
if(file.exists("Images/tqq.pdf"))
unlink("Images/tqq.pdf")
pdf("Images/tqq.pdf", height = 4, width = 4)
tsamp <- rt(250, 3)
par(mar = c(4, 4, 0.5, 0.5))
qqnorm(tsamp, main = "", pch = 16, col = "blue")
qqline(tsamp)
dev.off()
#####################################################################################################
if(file.exists("Images/citiacf.pdf"))
unlink("Images/citiacf.pdf")
pdf("Images/citiacf.pdf", height = 4, width = 4)
par(mar = c(4, 4, 0.5, 0.5))
acf(rstandard(m.citi), main = "")
dev.off()
#####################################################################################################
if(file.exists("Images/corracf.pdf"))
unlink("Images/corracf.pdf")
pdf("Images/corracf.pdf", height = 4, width = 4)
par(mar = c(4, 4, 0.5, 0.5))
acf(rstandard(m7), main = "")
dev.off()
#####################################################################################################
if(file.exists("Images/extlev.pdf"))
unlink("Images/extlev.pdf")
pdf("Images/extlev.pdf", height = 4, width = 6)
par(mar = c(4, 4, 0.5, 0.5))
x <- seq(-1, 1, length = 9)
y <- c(2*x + rnorm(9)/10, rnorm(1))
x <- c(x, 5)
plot(x, y, pch = 16, ylim = c(-3, 3), col = "blue", xlab = "x", ylab = "Y")
abline(lm(y ~ x))
dev.off()
#####################################################################################################
library(robust)
if(file.exists("Images/qqwenv.pdf"))
unlink("Images/qqwenv.pdf")
pdf("Images/qqwenv.pdf", height = 4.5, width = 4.5)
fm <- fit.models(m.citi)
names(fm) <- "Citigroup vs. S&P 500 (Daily Returns)"
plot(fm, which = 2)
dev.off()
library(quantmod)
getSymbols("CITCRP")
getSymbols("CONED")
getSymbols("CONTIL")
getSymbols("DATGEN")
getSymbols("DEC")
getSymbols("^GSPC")
symbols <- c("LNKD","GOOG","Z","AMZN","ZNGA")
CITCRP <- CITCRP["2012"]
CONED <- CONED["2012"]
CONTIL <- CONTIL["2012"]
DATGEN <- DATGEN["2012"]
DEC <- DEC["2012"]
GSPC <- GSPC["2012"]
N <- 185
symb_mat <- cbind(as.vector(CITCRP[1:N,4]),
as.vector(CONED[1:N,4]),
as.vector(CONTIL[1:N,4]),
as.vector(DATGEN[1:N,4]),
as.vector(DEC[1:N,4]))
C.GSPC <- as.vector(GSPC[1:N, 4])
R.SP500 <- log(C.GSPC[-1] / C.GSPC[-N])
returns <- log(symb_mat[-1,]/symb_mat[-N,])
m1 <- lm(returns ~ R.SP500)
m1.sum <- summary(m1)
b <- t(coef(m1)[2, , drop = FALSE])
d <- sapply(m1.sum, function(u) u$sigma)
D <- diag(d^2)
sigma2M <- var(R.SP500)
omega <- sigma2M * b %*% t(b) + D
var(returns)
RETURNS
returns
omega
rm(list=ls(all=TRUE))
library(quantmod)
getSymbols("ZNGA")
getSymbols("AMZN")
getSymbols("Z")
getSymbols("GOOG")
getSymbols("LNKD")
getSymbols("^GSPC")
symbols <- c("LNKD","GOOG","Z","AMZN","ZNGA")
ZNGA <- ZNGA["2012"]
AMZN <- AMZN["2012"]
Z <- Z["2012"]
GOOG <- GOOG["2012"]
LNKD <- LNKD["2012"]
GSPC <- GSPC["2012"]
N <- 185
symb_mat <- cbind(as.vector(Z[1:N,4]),
as.vector(AMZN[1:N,4]),
as.vector(ZNGA[1:N,4]),
as.vector(GOOG[1:N,4]),
as.vector(LNKD[1:N,4]))
C.GSPC <- as.vector(GSPC[1:N, 4])
R.SP500 <- log(C.GSPC[-1] / C.GSPC[-N])
returns <- log(symb_mat[-1,]/symb_mat[-N,])
m1 <- lm(returns ~ R.SP500)
m1.sum <- summary(m1)
b <- t(coef(m1)[2, , drop = FALSE])
d <- sapply(m1.sum, function(u) u$sigma)
D <- diag(d^2)
sigma2M <- var(R.SP500)
omega <- sigma2M * b %*% t(b) + D
var(returns)
omega
# Comment
setwd("~/ClickPrediction")
eta001 <- read.table("avg_loss_0.001_0.0.txt")
eta001
plot(eta001)
library(ggplot2)
# eta = 0.001
eta001 <- read.table("avg_loss_0.001_0.0.txt")
qplot(eta001)
qplot(y=eta001)
qplot(x=range(1,23358), y=eta001)
range(1,10)
c(1:10)
qplot(x=c(1,23358), y=eta001)
plot(x=c(1,23358), y=eta001)
plot(x=c(0,23358), y=eta001)
plot(x=c(1,23359), y=eta001)
plot(x=c(1, 23358), y=eta001)
c(1,10)
plot(x=c(1:23358), y=eta001)
plot(x=c(1:23358), y=eta001)
c(1:10)
plot(x=c(1:23358), y=eta001)
eta001 <- data.frame(x=c(1:23358), y=eta001)
eta001
eta001(1:10)
eta001[1:10]
eta001[1:5,]
eta001[end,]
eta001[-1,]
plot(x=x, y=y)
plot(x=x, y=y, data=eta001)
plot(x=x, y=y, data=eta001)
plot(x=x, y=y, data=eta001)
library(ggplot2)
# eta = 0.001
eta001 <- read.table("avg_loss_0.001_0.0.txt")
eta001 <- data.frame(x=c(1:23358), y=eta001)
plot(x=x, y=y, data=eta001)
eta001 <- data.frame(xpoints=c(1:23358), avgloss=eta001)
plot(x=xpoints, y=avgloss, data=eta001)
eta001[1:5,]
eta001 <- data.frame(avgloss=eta001)
eta001[1:5,]
eta001 <- read.table("avg_loss_0.001_0.0.txt")
summary(eta001)
is.data.frame(eta001)
eta001[1:5,]
eta001[,]
plot(x,y, data=eta001)
top(eta001)
summary(eta001)
library(ggplot2)
# eta = 0.001
eta001 <- read.table("avg_loss_0.001_0.0.txt")
summary(eta001)
head(eta001)
plot(v1, data=eta001)
eta001 <- read.table("avg_loss_0.001_0.0.txt", col.names=c("x","y"))
eta001 <- read.table("avg_loss_0.001_0.0.txt", col.names=c("avg_loss"))
eta001
eta001[1,5]
eta001[1:5,]
summary(eta001)
plot(avg_loss, data=eta001)
plot(avg_loss, data = eta001)
plot(eta001.avg_loss)
plot(eta001$avg_loss)
eta001$x <- c(1:23358)
plot(eta001$avg_loss)
plot(eta001$x, eta001$avg_loss)
p <- ggplot(eta001, aes(x, avg_loss))
p <- p + geom_point()
p
p <- ggplot(eta001, aes(x, avg_loss))
p <- p + geom_line()
p
p <- p + theme_bw(base_size = 12, base_family = "")
p
p <- p + xlab("#100 points")
p
p <- ggplot(eta001, aes(x, avg_loss))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("#100 points")
p <- p + ylab("Average Loss")
p
p <- p + ggtitle("Average Loss vs steps for eta = 0.001")
p
eta01 <- read.table("avg_loss_0.01_0.0.txt", col.names=c("avg_loss"))
eta01$x <- c(1:23358)
p01 <- ggplot(eta01, aes(x, avg_loss))
p01 <- p01 + geom_line()
p01 <- p01 + theme_bw(base_size = 12, base_family = "")
p01 <- p01 + xlab("100 steps")
p01 <- p01 + ylab("Average Loss")
p01 <- p01 + ggtitle("Average Loss vs steps for eta = 0.01")
p01
eta05 <- read.table("avg_loss_0.05_0.0.txt", col.names=c("avg_loss"))
eta05$x <- c(1:23358)
p05 <- ggplot(eta05, aes(x, avg_loss))
p05 <- p05 + geom_line()
p05 <- p05 + theme_bw(base_size = 12, base_family = "")
p05 <- p05 + xlab("100 steps")
p05 <- p05 + ylab("Average Loss")
p05 <- p05 + ggtitle("Average Loss vs steps for eta = 0.05")
p05
multiplot(p001, p01, p05, cols=1)
source('~/ClickPrediction/p2b_plotting.R')
source('~/ClickPrediction/p2b_plotting.R')
source('~/ClickPrediction/p2b_plotting.R')
lambda = c(0.0,0.002,0.004,0.006,0.008,0.010,0.012,0.014)
rmse = c(0.17334843748770765,
0.17278782374238363,
0.17277095177139887,
0.1727846069254829,
0.17280541432751717,
0.17282746515285405,
0.1728486797528293,
0.17286844967719323)
baseline = c(0.173083735870231)
p3b <- data.frame(lambda=lambda, rmse=rmse)
p3b
p <- ggplot(p3b, aes(lambda, rmse))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
baseline <- rep(baseline, rmse.length)
baseline <- rep(baseline, rmse.size)
baseline <- rep(baseline, length(rmse))
baseline
p3b <- data.frame(lambda=lambda, rmse=rmse, baseline=baseline)
p3b
c(lambda,lambda)
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
var=c(rep(0,length(rmse)),rep(1,length(rmse))))
p3b
p <- ggplot(p3b, aes(lambda, rmse, color=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p <- ggplot(p3b, aes(lambda, rmse, colour=var, group=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
source('~/ClickPrediction/p3b.R')
source('~/ClickPrediction/p3b.R')
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
var=c(rep(0,length(rmse)),rep(1,length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=var, colour=group))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p <- ggplot(p3b, aes(lambda, rmse, group=var, colour=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
source('~/ClickPrediction/p3b.R')
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
var=c(rep("rmse",length(rmse)),rep("baseline",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=var, colour=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p <- ggplot(p3b, aes(lambda, rmse, group=var, linetype=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("baseline",length(rmse)),rep("rmse",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=var, linetype=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
source('~/ClickPrediction/p3b.R')
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("baseline",length(rmse)),rep("rmse",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=var, linetype=var))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
lambda = c(0.0,0.002,0.004,0.006,0.008,0.010,0.012,0.014)
rmse = c(0.17334843748770765,
0.17278782374238363,
0.17277095177139887,
0.1727846069254829,
0.17280541432751717,
0.17282746515285405,
0.1728486797528293,
0.17286844967719323)
baseline = c(0.173083735870231)
baseline <- rep(baseline, length(rmse))
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("baseline",length(rmse)),rep("rmse",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=var, linetype=RMSE))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("baseline",length(rmse)),rep("rmse",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=RMSE, linetype=RMSE))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("rmse",length(rmse)),rep("baseline",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=RMSE, linetype=RMSE))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p <- p + theme_bw(base_size = 12, base_family = "")
p3b <- data.frame(lambda=c(lambda,lambda), rmse=c(rmse,baseline),
RMSE=c(rep("rmse",length(rmse)),rep("baseline",length(rmse))))
p <- ggplot(p3b, aes(lambda, rmse, group=RMSE, linetype=RMSE))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + scale_linetype_manual(values=c("dotdash", "dotted"))
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
p <- ggplot(p3b, aes(lambda, rmse, group=RMSE, linetype=RMSE))
p <- p + geom_line()
p <- p + theme_bw(base_size = 12, base_family = "")
p <- p + scale_linetype_manual(values=c("dashed", "solid"))
p <- p + xlab("lambda")
p <- p + ylab("RMSE")
p <- p + ggtitle("RMSE vs lambda for eta = 0.05")
p
